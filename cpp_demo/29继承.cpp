/*
 * 继承
 * 通过一种机制表达出类型之间共性和特性的方式，利用已有数据类型定义新的数据类型 这种机制称为继承。
 * 将子类类型的指针或者引用 转换为基类类型的指针或者引用，这种操作性缩小的类型转换 叫向上构造。编译器看来是安全的，可以直接完成隐式转化。
 * 反过来，向下转换，是危险的，必须显示完成。
 *
 * 基类的构造函数，析构函数 子类无法继承，但是可以在子类的构造函数初始化表中，显示指明基类部分(基类子对象)的初始化方式
 *
 * 子类和基类中定义同名的成员函数，因为作用于的不同，不会形成重载关系，而是一种隐藏关系。 这时如果需要通过子类访问基类中的隐藏成员，需要
 * 使用作用域限定操作符 显示指明 a.b::func();
 *
 * 拷贝赋值函数，编译器会为子类提供缺省的。如果自己写，要显示的调用基类的拷贝赋值函数。完成对基类对象的复制。传that 会又隐藏的向上构造
 *
 *
 *
 * */
